/**
 * Объявление пакета, в котором находится класс
 */
package testi;
/**
 * Добавление библиотек для проверки результатов теста
 */
import static org.junit.Assert.*;
/**
 * Добавление библиотек для тестирования
 */
import org.junit.Test;
/**
 * Добавление класса расчета сберегательного депозита
 */
import Testov.Function;
/**
 * Создание класса для тестирования
 */
public class Test1 {
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета суммы задолженности
	 */
	public void test() {
		/**
		 * Первый тест для проверки расчета суммы задолженности
		 * по книгам при следующих значениях:
		 * Кол-во задолженных книг = 2 шт. (переменная quantity);
		 * кол-во просроченных дней - 100 (переменная percent);
		 * начисления за один день - 1 руб./шт*день (переменная percent);
		 */
		int quantity = 2;  int days = 100; int price = 1;
		/**
		 * Переменная s отвечает за значение из функции calc_debt,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_debt, в нее подаются значения 
		 * для расчета суммы задолженности, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_debt(quantity,days,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по сумме задолженности от книг  
		 */
		int tests = 200;
		/**
		 * Сверяется результат работы фунциии calc_debt
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета суммы задолженности
	 */
	
	public void test2() {
		/**
		 * Первый тест для проверки расчета суммы задолженности
		 * по книгам при следующих значениях:
		 * Кол-во задолженных книг = 3 шт. (переменная quantity);
		 * кол-во просроченных дней - 50 (переменная percent);
		 * начисления за один день - 1 руб./шт*день (переменная percent);
		 */
		int quantity = 3;  int days = 50; int price = 1;
		/**
		 * Переменная s отвечает за значение из функции calc_debt,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_debt, в нее подаются значения 
		 * для расчета суммы задолженности, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_debt(quantity,days,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по сумме задолженности от книг  
		 */
		int tests = 150;
		/**
		 * Сверяется результат работы фунциии calc_debt
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
	
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета суммы задолженности
	 */
	
	public void test3() {
		/**
		 * Первый тест для проверки расчета суммы задолженности
		 * по книгам при следующих значениях:
		 * Кол-во задолженных книг = 10 шт. (переменная quantity);
		 * кол-во просроченных дней - 100 (переменная percent);
		 * начисления за один день - 1 руб./шт*день (переменная percent);
		 */
		int quantity = 10;  int days = 100; int price = 1;
		/**
		 * Переменная s отвечает за значение из функции calc_debt,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_debt, в нее подаются значения 
		 * для расчета суммы задолженности, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_debt(quantity,days,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по сумме задолженности от книг  
		 */
		int tests = 1000;
		/**
		 * Сверяется результат работы фунциии calc_debt
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
	
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета суммы задолженности
	 */
	
	public void test4() {
		/**
		 * Первый тест для проверки расчета суммы задолженности
		 * по книгам при следующих значениях:
		 * Кол-во задолженных книг = 20 шт. (переменная quantity);
		 * кол-во просроченных дней - 10 (переменная percent);
		 * начисления за один день - 1 руб./шт*день (переменная percent);
		 */
		int quantity = 20;  int days = 10; int price = 1;
		/**
		 * Переменная s отвечает за значение из функции calc_debt,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_debt, в нее подаются значения 
		 * для расчета суммы задолженности, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_debt(quantity,days,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по сумме задолженности от книг  
		 */
		int tests = 200;
		/**
		 * Сверяется результат работы фунциии calc_debt
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
	
	
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета стоимости заказа книг
	 */
	
	public void test5() {
		/**
		 * Первый тест для проверки расчета суммы стоимости
		 * заказа книг при следующих значениях:
		 * Кол-во заказанных книг = 10 шт. (переменная quantity);
		 * цена одной книги - 200 руб/шт. (переменная price);
		 */
		int quantity = 10;  int price = 200;
		/**
		 * Переменная s отвечает за значение из функции calc_zakaz,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_zakaz, в нее подаются значения 
		 * для расчета стоимости заказа книг, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_zakaz(quantity,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по стоимости заказа книг  
		 */
		int tests = 2000;
		/**
		 * Сверяется результат работы фунциии calc_zakaz
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
	
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета стоимости заказа книг
	 */
	
	public void test6() {
		/**
		 * Первый тест для проверки расчета суммы стоимости
		 * заказа книг при следующих значениях:
		 * Кол-во заказанных книг = 100 шт. (переменная quantity);
		 * цена одной книги - 300 руб/шт. (переменная price);
		 */
		int quantity = 100;  int price = 300;
		/**
		 * Переменная s отвечает за значение из функции calc_zakaz,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_zakaz, в нее подаются значения 
		 * для расчета стоимости заказа книг, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_zakaz(quantity,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по стоимости заказа книг  
		 */
		int tests = 30000;
		/**
		 * Сверяется результат работы фунциии calc_zakaz
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
	
	
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета стоимости заказа книг
	 */
	
	public void test7() {
		/**
		 * Первый тест для проверки расчета суммы стоимости
		 * заказа книг при следующих значениях:
		 * Кол-во заказанных книг = 50 шт. (переменная quantity);
		 * цена одной книги - 1000 руб/шт. (переменная price);
		 */
		int quantity = 50;  int price = 1000;
		/**
		 * Переменная s отвечает за значение из функции calc_zakaz,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_zakaz, в нее подаются значения 
		 * для расчета стоимости заказа книг, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_zakaz(quantity,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по стоимости заказа книг  
		 */
		int tests = 50000;
		/**
		 * Сверяется результат работы фунциии calc_zakaz
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
	
	
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета стоимости заказа книг
	 */
	
	public void test8() {
		/**
		 * Первый тест для проверки расчета суммы стоимости
		 * заказа книг при следующих значениях:
		 * Кол-во заказанных книг = 5 шт. (переменная quantity);
		 * цена одной книги - 150 руб/шт. (переменная price);
		 */
		int quantity = 5;  int price = 150;
		/**
		 * Переменная s отвечает за значение из функции calc_zakaz,
		 * которая расположена в классе Function
		 */
		int s;
		/**
		 * Вызывается функция calc_zakaz, в нее подаются значения 
		 * для расчета стоимости заказа книг, а её результат 
		 * записывается в переменную s
		 */
		s = Function.calc_zakaz(quantity,price);
		/**
		 * Создается переменная tests, в которую записывается
		 * ожидаемый результат по стоимости заказа книг  
		 */
		int tests = 750;
		/**
		 * Сверяется результат работы фунциии calc_zakaz
		 * (переменная s) и ожидаемый результат 
		 * (переменная tests)
		 */
		assertEquals(tests,s);
	}
}